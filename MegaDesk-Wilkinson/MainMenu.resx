<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureDesk.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IMWQZQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEH/9k=
</value>
  </data>
</root>